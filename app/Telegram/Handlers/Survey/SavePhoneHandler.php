<?php

namespace App\Telegram\Handlers\Survey;

use App\Models\Lead; // –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –∏–Ω–∞—á–µ –Ω–∞–∑–≤–∞–Ω–∞ ‚Äî –∑–∞–º–µ–Ω–∏ –∑–¥–µ—Å—å –∏ –≤ routes
use App\Telegram\Services\AdminNotifier;
use App\Telegram\Survey\SurveyStorage;
use SergiX44\Nutgram\Nutgram;
use SergiX44\Nutgram\Telegram\Types\Keyboard\InlineKeyboardButton;
use SergiX44\Nutgram\Telegram\Types\Keyboard\InlineKeyboardMarkup;

class SavePhoneHandler
{
    public function __invoke(Nutgram $bot): void
    {
        $storage = new SurveyStorage($bot->userId());
        $data = $storage->get();

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ–∞–ª—å–Ω–æ –∂–¥—ë–º —Ç–µ–ª–µ—Ñ–æ–Ω
        if (($data['step'] ?? null) !== 4) {
            return; // –∏–≥–Ω–æ—Ä–∏–º —á—É–∂–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        }

        // 1) —Ç–µ–ª–µ—Ñ–æ–Ω –∏–∑ contact
        $phone = $bot->message()?->contact?->phone_number;

        // 2) –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º
        if (!$phone) {
            $text = trim((string)($bot->message()?->text ?? ''));
            // –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã/+, —Å–∫–æ–±–∫–∏, –¥–µ—Ñ–∏—Å—ã –∏ –ø—Ä–æ–±–µ–ª—ã
            if ($text === '' || !preg_match('~[0-9]{6,}~', $text)) {
                $bot->sendMessage('–ü–æ—Ö–æ–∂–µ, –Ω–æ–º–µ—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π. –í–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.');
                return;
            }
            $phone = $text;
        }

        // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –æ—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –ø—Ä–∏–ø–∏—Å—ã–≤–∞–µ–º +
        $digits = preg_replace('/\D+/', '', $phone ?? '');
        if (strlen($digits) < 10) {
            $bot->sendMessage('–ù–æ–º–µ—Ä —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.');
            return;
        }
        $phone = '+'.$digits;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏–¥
        Lead::create([
            'telegram_id' => $bot->userId(),
            'phone'       => $phone,
            'answers'     => [
                'type'    => $data['type'] ?? null,
                'credit'  => $data['credit'] ?? null,
                'contact' => $data['contact'] ?? null,
            ],
        ]);

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
        $tgId   = (string)$bot->userId();
        $user   = $bot->user();
        $name   = trim(($user->first_name ?? '').' '.($user->last_name ?? ''));
        $username = $user->username ?? null;

        $answers = [
            '–¢–∏–ø'     => $data['type'] ?? '‚Äî',
            '–†–∞—Å—á—ë—Ç'  => $data['credit'] ?? '‚Äî',
            '–ö–∞–Ω–∞–ª'   => $data['contact'] ?? '‚Äî',
        ];
        $answersTxt = collect($answers)->map(fn($v,$k) => "<b>{$k}:</b> ".e($v))->implode("\n");
        $uLine  = $name !== '' ? "<b>–ò–º—è:</b> ".e($name)."\n" : '';
        $uLine .= $username ? "<b>Username:</b> @".e($username)."\n" : '';

        $notifyText = "üÜï <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\n\n{$answersTxt}\n<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {$phone}\n\n{$uLine}<b>Telegram ID:</b> <code>{$tgId}</code>\n<i>–í—Ä–µ–º—è:</i> ".now();
        AdminNotifier::notify($bot, $notifyText, 'HTML');

        $sent = $bot->sendMessage(
            "–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ {$data['contact']} –∏ –ø—Ä–∏—à–ª—ë–º –ø–æ–¥–±–æ—Ä–∫—É. ‚úÖ",
            reply_markup: InlineKeyboardMarkup::make()
                ->addRow(
                    InlineKeyboardButton::make(
                        text: 'üîÑ –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é',
                        callback_data: 'survey_restart:'.$bot->message()->message_id // –ø–µ—Ä–µ–¥–∞—ë–º id —Å–æ–æ–±—â–µ–Ω–∏—è
                    )
                )
        );

// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        $storage->reset();
    }
}
