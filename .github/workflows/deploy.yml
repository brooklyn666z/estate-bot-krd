name: Deploy estate-bot

on:
  push:
    branches: [ "main" ]   # деплой будет при пуше в main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Забираем код из репо
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Поднимаем PHP окружение (чтобы прогнать composer install)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2
          extensions: mbstring, intl, pdo_mysql, bcmath, curl, zip
          coverage: none

      # 3. Устанавливаем зависимости (только прод)
      - name: Install Composer deps (prod)
        run: |
          composer install --no-dev --prefer-dist --no-interaction --no-progress --optimize-autoloader

      # 4. Создаём архив релиза
      - name: Create release archive
        run: |
          tar -czf release.tar.gz \
            --exclude=".git" \
            --exclude="node_modules" \
            --exclude="tests" \
            .

      # 5. Заливаем архив на сервер
      - name: Upload artifact to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "release.tar.gz"
          target: "${{ secrets.DEPLOY_PATH }}/"

      # 6. Деплой (разархивация, миграции, переключение current)
      - name: Deploy on server
        uses: appleboy/ssh-action@v1.2.0
        env:
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          PHP_BIN: ${{ secrets.PHP_BIN }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -e
            DEPLOY_PATH="${DEPLOY_PATH:-$HOME/apps/estate-bot}"
            PHP_BIN="${PHP_BIN:-php}"
            TS=$(date +%Y%m%d%H%M%S)
            REL_DIR="$DEPLOY_PATH/releases/$TS"

            mkdir -p "$REL_DIR"
            tar -xzf "$DEPLOY_PATH/release.tar.gz" -C "$REL_DIR"
            rm -f "$DEPLOY_PATH/release.tar.gz"

            # symlinks к shared файлам/папкам
            ln -sfn "$DEPLOY_PATH/shared/.env" "$REL_DIR/.env"
            rm -rf "$REL_DIR/storage"
            ln -sfn "$DEPLOY_PATH/shared/storage" "$REL_DIR/storage"
            mkdir -p "$DEPLOY_PATH/shared/bootstrap/cache"
            ln -sfn "$DEPLOY_PATH/shared/bootstrap/cache" "$REL_DIR/bootstrap/cache"

            cd "$REL_DIR"

            # оптимизация и миграции
            $PHP_BIN artisan key:generate --force || true
            $PHP_BIN artisan storage:link || true
            $PHP_BIN artisan config:cache
            $PHP_BIN artisan route:cache || true
            $PHP_BIN artisan view:cache || true
            $PHP_BIN artisan migrate --force || true

            # переключаем current
            ln -sfn "$REL_DIR" "$DEPLOY_PATH/current"

            # права (может понадобиться подстроить)
            chmod -R ug+rw "$DEPLOY_PATH/shared/storage" "$DEPLOY_PATH/shared/bootstrap/cache" || true

            echo "✅ Deployed $TS"
